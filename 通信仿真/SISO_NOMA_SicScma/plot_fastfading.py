#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov 25 18:11:10 2024

@author: jack
"""



import os
import sys


import matplotlib
# matplotlib.use('TkAgg')
# matplotlib.use('Agg')
import matplotlib.pyplot as plt
# from mpl_toolkits.axes_grid1.inset_locator import mark_inset
# from mpl_toolkits.axes_grid1.inset_locator import inset_axes
# from matplotlib.patches import ConnectionPatch
import numpy as np
# import torch
from matplotlib.font_manager import FontProperties
from matplotlib.pyplot import MultipleLocator
import socket, getpass
from scipy.signal import savgol_filter

# 获取当前系统主机名
host_name = socket.gethostname()
# 获取当前系统用户名
user_name = getpass.getuser()
# 获取当前系统用户目录
user_home = os.path.expanduser('~')
home = os.path.expanduser('~')

# 本项目自己编写的库
# from option import args
sys.path.append("..")
# checkpoint
# import Utility



fontpath = "/usr/share/fonts/truetype/windows/"
# fname =  "/usr/share/fonts/truetype/arphic/SimSun.ttf",
font = FontProperties(fname=fontpath+"simsun.ttf", size=22)
fontpath1 = "/usr/share/fonts/truetype/msttcorefonts/"
fonte = FontProperties(fname=fontpath1+"Times_New_Roman.ttf", size=22)
fontpath2 = "/usr/share/fonts/truetype/NerdFonts/"
font1 = FontProperties(fname=fontpath2+"Caskaydia Cove ExtraLight Nerd Font Complete.otf", size=20)

# mark  = ['s','v','*', 'o', 'd', '>', '1', 'p', '2', 'h', 'P', '3', '|', 'X', '4', '8', 'H', '+', 'x', 'D', '_', '$\\clubsuit$', '$\\bowtie$', '$\\boxdot$', '$\\boxtimes$', '$\\boxminus$',  '$\\boxplus$', '$\\bigodot$','$\\bigoplus$', '$\\bigotimes$', '$\\bigstar$', '$\\blacksquare$', '$\circledR$', '$\circledS$',  '$\\bigtriangledown$','$\\bigtriangleup$','$\\blacktriangleleft$', '$\\blacktriangleright$', '$\\diamondsuit',   '$\heartsuit$', '$666$', '$\\varrho$', '$\\Omega$', '$\\nabla$', '$\\Upsilon$', '$\\mho$', '$\\Phi$',  '$\\divideontimes$', '$\\otimes$', '$\\odot$', '$\\ominus$', '$\\oplus$', '$\\oslash$', '$\\otimes$']

color = ['#1E90FF','#FF6347','#00FF00','#0000FF','#4ea142','#FF00FF','#FFA500','#800080','#FF0000','#EE82EE','#00FFFF','#9932CC','#00CED1','#CD5C5C',  '#7B68EE','#808000']
lsty = [(0, (3, 10, 1, 10, 1, 10)), (0, (1, 1)), (0, (1, 2)), (0, (5, 1)), (0, (1, 10)), (0, (1, 2)),  (0, (5, 10)), (0, (5, 5)), (0, (3, 10, 1, 10)), (0, (3, 5, 1, 5)), (0, (3, 5, 1, 5, 1, 5)),  '-', ':', '--', '-.', ]
alabo = ['(a)', '(b)', '(c)', '(d)', '(e)', '(f)', '(g)', '(h)']


# 第一组数据，第一列是Eb/N0或SNR, 第二列是BER，第三列是WER，下同。
Joint_fastfading_4 = np.array([[0.00, 1.00000000, 0.22974609, 0.00000000],
                        [1.00, 1.00000000, 0.20391276, 0.00000000],
                        [2.00, 1.00000000, 0.17126302, 0.00000000],
                        [3.00, 1.00000000, 0.12468750, 0.00000000],
                        [3.20, 0.97402597, 0.10669262, 0.00000000],
                        [3.40, 0.84269663, 0.07720879, 0.00000000],
                        [3.60, 0.39062500, 0.03249359, 0.00000000],
                        [3.80, 0.05584320, 0.00429232, 0.00000000],
                        [4.00, 0.0037257824, 0.0002743762, 0.0000],
                        [4.10, 0.0006524815, 0.0000486007, 0.00000],
                        [4.20, 0.0000585199, 0.0000048805, 0.00000],
                        ])

Joint_fastfading_2 = np.array([ [0.00, 1.00000000,   0.14276693, 0.23450520833333333, 0.00000000, 25.0],
                                [0.50, 1.00000000,  0.12561198, 0.20567708333333334, 0.00000000, 25.0],
                                [1.00, 1.00000000,  0.10027344, 0.16825520833333332, 0.00000000, 25.0],
                                [1.50, 0.84269663,  0.06209950, 0.1063575316011236, 0.00000000, 23.76],
                                [2.00, 0.09804560,  0.00501832,  0.00876806799674267, 0.00000000, 11.50],
                                [2.50, 0.0000963020, 0.0000054922, 0.000021,       0.00000000, 5.23]
                                ])

Joint_fastfading_2_mess = np.array([[0.00, 1.00000000, 0.30679036, 0.26712240, 0.00000000, 25.000],
                                    [0.50, 1.00000000, 0.30150391, 0.24954427, 0.00000000, 25.000],
                                    [1.00, 1.00000000, 0.29585286, 0.23084635, 0.00000000, 25.000],
                                    [1.50, 1.00000000, 0.29384766, 0.21136719, 0.00000000, 25.000],
                                    [2.00, 1.00000000, 0.29046875, 0.19259115, 0.00000000, 25.000],
                                    [2.50, 1.00000000, 0.28841797, 0.17286458, 0.00000000, 25.000],
                                    [3.00, 1.00000000, 0.28094401, 0.14796875, 0.00000000, 25.000],
                                    [3.50, 1.00000000, 0.28107422, 0.12544271, 0.00000000, 25.000],
                                    [4.00, 1.00000000, 0.27375651, 0.09294271, 0.00000000, 25.000],
                                    [4.50, 1.00000000, 0.26934896, 0.05033854, 0.00000000, 25.000],
                                    [5.00, 1.00000000, 0.26416667, 0.01658854, 0.00000000, 25.000],
                                    [5.50, 1.00000000, 0.26229167, 0.01436198, 0.00000000, 25.000],
                                    [6.00, 1.00000000, 0.26479167, 0.01303385, 0.00000000, 25.000],
                                    [6.50, 1.00000000, 0.26140625, 0.01080729, 0.00000000, 25.000],
                                    [7.00, 1.00000000, 0.26121094, 0.01069010, 0.00000000, 25.000],
                                    [7.50, 1.00000000, 0.25871094, 0.00912760, 0.00000000, 25.000],
                                    [8.00, 1.00000000, 0.25899740, 0.00815104, 0.00000000, 25.000],
                                    [8.50, 1.00000000, 0.25825521, 0.00690104, 0.00000000, 25.000],
                                    [9.00, 1.00000000, 0.25475260, 0.00565104, 0.00000000, 25.000],
                                    [9.50, 1.00000000, 0.25609375, 0.00602865, 0.00000000, 25.000],
                                    [10.00, 1.00000000, 0.25406250, 0.00524740, 0.00000000, 25.000],
                                    [10.50, 1.00000000, 0.25602865, 0.00453125, 0.00000000, 25.000],
                                    [11.00, 1.00000000, 0.25368490, 0.00429688, 0.00000000, 25.000],
                                    [11.50, 1.00000000, 0.25441406, 0.00363281, 0.00000000, 25.000],
                                ])


                                    # SNR   # FER       #BER        # 聚合误差   ##          # 迭代次数
Joint_fastfading_2_mess2 = np.array([[0.00, 1.00000000, 0.50182943, 0.23450521, 0.00000000, 25.000],
                                    [0.50, 1.00000000, 0.50195312,  0.20567708,  0.00000000, 25.000],
                                    [1.00, 1.00000000, 0.49813802,  0.16825521,  0.00000000, 25.000],
                                    [1.50, 1.00000000, 0.49977214,  0.10505208,  0.00000000, 23.690],
                                    [2.00, 1.00000000, 0.50347656,  0.01190104,  0.00000000, 12.080],
                                    # [2.50, 1.00000000, 0.50095052, 0.00000000,  0.00000000, 5.190],
                                    # [3.00, 1.00000000, 0.50063802, 0.00000000, 0.00000000, 3.737],
                                    [3.50, 1.00000000, 0.50108073,   0.00002604,  0.00000000, 2.910],
                                    # [4.00, 1.00000000, 0.49919271, 0.00000000, 0.00000000, 2.397],
                                    [4.50, 1.00000000, 0.49848958,   0.00003906, 0.00000000, 2.100],
                                    # [5.00, 1.00000000, 0.49901042, 0.00000000, 0.00000000, 1.923],
                                    [5.50, 1.00000000, 0.49787760,   0.00001302, 0.00000000, 1.693],
                                    # [6.00, 1.00000000, 0.50197917, 0.00000000, 0.00000000, 1.563],
                                    # [6.50, 1.00000000, 0.49912760, 0.00000000, 0.00000000, 1.427],
                                    # [7.00, 1.00000000, 0.50236979, 0.00000000, 0.00000000, 1.290],
                                    # [7.50, 1.00000000, 0.50187500, 0.00000000, 0.00000000, 1.220],
                                    # [8.00, 1.00000000, 0.50225260, 0.00000000, 0.00000000, 1.107],
                                    # [8.50, 1.00000000, 0.49751302, 0.00000000, 0.00000000, 1.043],
                                    # [9.00, 1.00000000, 0.50005208, 0.00000000, 0.00000000, 1.033],
                                    # [9.50, 1.00000000, 0.49917969, 0.00000000, 0.00000000, 0.947],
                                    # [10.00, 1.00000000, 0.50139323, 0.00000000, 0.00000000, 0.940],
                                    # [10.50, 1.00000000, 0.49934896, 0.00000000, 0.00000000, 0.853],
                                    # [11.00, 1.00000000, 0.49738281, 0.00000000, 0.00000000, 0.787],
                                    # [11.50, 1.00000000, 0.49933594, 0.00000000, 0.00000000, 0.690],
                                        ])


Joint_blockfading_2 = np.array([[0.00, 0.61680328, 0.14722080, 0.2450531506147541,  0.00000000, 21.598360655737704],
                                [0.50, 0.58593750, 0.12818146, 0.21350860595703125, 0.00000000, 21.0625],
                                [1.00, 0.56179775, 0.12101694, 0.20212283473782772, 0.00000000, 19.88951310861423],
                                [1.50, 0.49833887, 0.11036778, 0.18298380398671096, 0.00000000, 18.51827242524917],
                                [2.00, 0.44378698, 0.09619141, 0.16417806952662722, 0.00000000, 17.618343195266274],
                                [2.50, 0.41346154, 0.08605555, 0.14639315762362637, 0.00000000, 16.673076923076923],
                                [3.00, 0.38461538, 0.07742638, 0.13671875,          0.00000000, 16.002564102564104],
                                [3.50, 0.35128806, 0.07023703, 0.12093365778688525, 0.00000000, 14.600702576112413],
                                [4.00, 0.32822757, 0.06682508, 0.1126230853391685,  0.00000000, 13.408096280087527],
                                [4.50, 0.29585799, 0.05808910, 0.10153553377712031, 0.00000000, 12.844181459566075],
                                [5.00, 0.25423729, 0.05054125, 0.09225701800847458, 0.00000000, 12.027118644067796],
                                [5.50, 0.25041736, 0.04937428, 0.08959594115191986, 0.00000000, 11.70617696160267],
                                [6.00, 0.22556391, 0.04586907, 0.08280662593984962, 0.00000000, 10.437593984962406],
                                [6.50, 0.19762846, 0.03702703, 0.06625185276679842, 0.00000000, 9.414361001317523],
                                [7.00, 0.18603214, 0.03476152, 0.05853822234239802, 0.00000000, 8.46477132262052],
                                [7.50, 0.15673981, 0.02960607, 0.05008939067398119, 0.00000000, 7.511494252873563],
                                [8.00, 0.15228426, 0.02979557, 0.05201459390862944, 0.00000000, 7.526903553299492],
                                [8.50, 0.12155592, 0.02293339, 0.04190988401539708, 0.00000000, 6.366693679092383],
                                [9.00, 0.12156704, 0.02203418, 0.03918397869547657, 0.00000000, 6.206785137318255],
                                [9.50, 0.11177347, 0.02055438, 0.037227261084202684, 0.00000000, 5.789493293591654],
                                [10.00, 0.09960159, 0.01860527, 0.03386454183266932, 0.00000000, 5.322377158034529],
                                [10.50, 0.08370536, 0.01461683, 0.026167733328683034, 0.00000000, 4.516462053571429],
                                [11.00, 0.06918819, 0.01231874, 0.022067249481088562, 0.00000000, 3.934040590405904],
                                [11.50, 0.06729475, 0.01208983, 0.022924903263795423, 0.00000000, 3.9017496635262447],
                                ])


Sep_fastfading_2 = np.array([[0.00, 1.00000000, 0.16934896, 0.27726563, 0.00000000, 25.000],
                            [0.50, 1.00000000, 0.15456380, 0.25554688, 0.00000000, 25.000],
                            [1.00, 1.00000000, 0.13701823, 0.22846354, 0.00000000, 25.000],
                            [1.50, 0.99668874, 0.12058283, 0.20422444, 0.00000000, 24.972],
                            [2.00, 0.93750000, 0.09614258, 0.16791992, 0.00000000, 24.316],
                            [2.50, 0.86206897, 0.07469581, 0.13165634, 0.00000000, 23.353],
                            [3.00, 0.66371681, 0.05092385, 0.09416482, 0.00000000, 20.376],
                            [3.50, 0.45180723, 0.02755259, 0.05154603, 0.00000000, 16.718],
                            [4.00, 0.28517110, 0.01553403, 0.02992440, 0.00000000, 13.340],
                            [4.50, 0.16796875, 0.00784411, 0.01533726, 0.00000000, 10.466],
                            [5.00, 0.11086475, 0.00445913, 0.00878834, 0.00000000, 8.667],
                            [5.50, 0.05841121, 0.00212653, 0.00422797, 0.00000000, 7.005],
                            [6.00, 0.04535833, 0.00147296, 0.00292821, 0.00000000, 6.204],
                            [6.50, 0.03421533, 0.00099928, 0.00199144, 0.00000000, 5.570],
                            [7.00, 0.02650645, 0.00074756, 0.00149030, 0.00000000, 5.106],
                            [7.50, 0.02082466, 0.00052794, 0.00105371, 0.00000000, 4.723],
                            [8.00, 0.01606512, 0.00039870, 0.00079740, 0.00000000, 4.383],
                            [8.50, 0.01766160, 0.00041590, 0.00083157, 0.00000000, 4.270],
                            [9.00, 0.01705127, 0.00038487, 0.00076864, 0.00000000, 4.143],
                            [9.50, 0.01382361, 0.00028646, 0.00057256, 0.00000000, 3.971],
                            [10.00, 0.01367864, 0.00028916, 0.00057796, 0.00000000, 3.898],
                            [10.50, 0.01395349, 0.00027634, 0.00055269, 0.00000000, 3.834],
                            [11.00, 0.01533429, 0.00029191, 0.00058382, 0.00000000, 3.786],
                            [11.50, 0.01577785, 0.00029799, 0.00059598, 0.00000000, 3.783],
                            ])

Sep_blockfading_2 = np.array([[0.00, 0.62970711, 0.16763370, 0.28898078, 0.00000000, 16.896],
                            [0.50, 0.59960159, 0.14891995, 0.25667642, 0.00000000, 16.173],
                            [1.00, 0.58823529, 0.14271982, 0.24803156, 0.00000000, 15.857],
                            [1.50, 0.56156716, 0.13796132, 0.23529326, 0.00000000, 15.160],
                            [2.00, 0.50000000, 0.11797526, 0.20773437, 0.00000000, 13.675],
                            [2.50, 0.43988270, 0.10192907, 0.17897155, 0.00000000, 12.217],
                            [3.00, 0.43988270, 0.09654795, 0.17499656, 0.00000000, 12.084],
                            [3.50, 0.43227666, 0.09504739, 0.16684866, 0.00000000, 11.987],
                            [4.00, 0.37531172, 0.08277159, 0.14501831, 0.00000000, 10.618],
                            [4.50, 0.37974684, 0.08173210, 0.14446697, 0.00000000, 10.672],
                            [5.00, 0.34722222, 0.07457818, 0.13417788, 0.00000000, 9.920],
                            [5.50, 0.30714286, 0.06554528, 0.11900112, 0.00000000, 8.806],
                            [6.00, 0.27573529, 0.05738920, 0.10447424, 0.00000000, 8.041],
                            [6.50, 0.26833631, 0.05551033, 0.10058768, 0.00000000, 7.921],
                            [7.00, 0.22556391, 0.04620095, 0.08518268, 0.00000000, 6.756],
                            [7.50, 0.21428571, 0.04363142, 0.07646763, 0.00000000, 6.524],
                            [8.00, 0.19556714, 0.03807448, 0.06652593, 0.00000000, 5.965],
                            [8.50, 0.19230769, 0.03738732, 0.06406250, 0.00000000, 5.834],
                            [9.00, 0.17221584, 0.03372336, 0.05798606, 0.00000000, 5.394],
                            [9.50, 0.14851485, 0.02781559, 0.04904084, 0.00000000, 4.725],
                            [10.00, 0.12573099, 0.02393924, 0.04251841, 0.00000000, 4.112],
                            [10.50, 0.12953368, 0.02491584, 0.04443106, 0.00000000, 4.164],
                            [11.00, 0.11857708, 0.02232044, 0.03831059, 0.00000000, 3.897],
                            [11.50, 0.09334163, 0.01826178, 0.03239125, 0.00000000, 3.239],
                            ])

def SISO_4user():
    lw = 2
    width = 10
    high  = 8
    fig, axs = plt.subplots(1, 1, figsize=(width, high), constrained_layout = True)# constrained_layout=True
    cols = 1
    ##=============================== LDPC =========================================

    ##=========================   ===============================
    lb = "4 User, Fastfading"
    axs.semilogy(Joint_fastfading_4[:, 0], Joint_fastfading_4[:, cols], color = 'k', ls = '-',  marker = 'o', mfc = 'none', ms = 18, label = lb,)

    # #=========================  ===============================
    # lb = "MPA, large fading, SISO, w/ LDPC"
    # axs.semilogy(fastfading_4[:, 0], fastfading_4[:, cols], color = 'r', ls='--', lw = 3, marker = '*', ms = 16,  mew = 2, label = lb)
    #=========================   ===============================
    # markeredgecolor # 圆边缘的颜色
    # markeredgewidth # 圆的线宽
    # # 注意如果令markerfacecolor='none'，那线就会穿过圆
    # lb = "EPA, large fading, SIMO, w/ LDPC"
    # axs.semilogy(EPA_LPDC_SIMO_large[:, 0], EPA_LPDC_SIMO_large[:, cols], color = 'b', ls='--', lw = 3, marker = 'd', ms = 16,  mew = 2, label = lb)

    ##===========================================================
    # plt.gca().invert_xaxis()

    axs.grid(linestyle = (0, (5, 10)), linewidth = 0.5 )
    # label
    font = {'family':'Times New Roman','style':'normal','size':35}
    axs.set_xlabel("SNR (dB)", fontproperties=font)
    if cols == 3:
        axs.set_ylabel( "SER",      fontproperties = font )# , fontdict = font1
    elif cols == 2:
        axs.set_ylabel( "BER",      fontproperties = font )# , fontdict = font1

    #font1 = FontProperties(fname=fontpath1+"Times_New_Roman.ttf", size = 22)
    # font1 = FontProperties(fname=fontpath2+"Caskaydia Cove ExtraLight Nerd Font Complete.otf", size=16)
    font1 = {'family':'Times New Roman','style':'normal','size':18, }
    legend1 = axs.legend(loc = 'upper right', borderaxespad = 0, edgecolor = 'black', prop = font1,)
    frame1 = legend1.get_frame()
    frame1.set_alpha(1)
    frame1.set_facecolor('none')  # 设置图例legend背景透明

    bw = 2.5
    axs.spines['bottom'].set_linewidth(bw) ###设置底部坐标轴的粗细
    axs.spines['left'].set_linewidth(bw)   ###设置左边坐标轴的粗细
    axs.spines['right'].set_linewidth(bw)  ###设置右边坐标轴的粗细
    axs.spines['top'].set_linewidth(bw)    ###设置上部坐标轴的粗细

    axs.tick_params(direction = 'in', axis = 'both', top=True, right = True, labelsize = 16, width = bw)
    labels = axs.get_xticklabels() + axs.get_yticklabels()
    [label.set_fontname('Times New Roman') for label in labels]
    [label.set_fontsize(30) for label in labels] #刻度值字号

    fontt = {'family':'Times New Roman','style':'normal','size':35 }
    plt.suptitle("4 User, [1024, 512], regular LDPC", fontproperties = fontt, )
    out_fig = plt.gcf()

    if cols == 1:
        out_fig.savefig("./Figures/fastfading_4user_ser.eps")
        out_fig.savefig("./Figures/fastfading_4user_ser.png")
    elif cols == 2:
        out_fig.savefig( "./Figures/fastfading_4user_ber.eps")
        out_fig.savefig( "./Figures/fastfading_4user_ber.png")

    plt.show()
    plt.close()
    return


def SISO_2user():
    width = 10
    high  = 8
    fig, axs = plt.subplots(1, 1, figsize=(width, high), constrained_layout = True)# constrained_layout=True
    cols = 3
    ##=============================== LDPC =========================================

    ##=========================   ===============================
    lb = "2 User, Fastfading, Joint"
    axs.semilogy(Joint_fastfading_2[:, 0], Joint_fastfading_2[:, cols], color = 'r', ls = '-',  marker = 'o', mfc = 'none', ms = 18, label = lb,)

    lb = "2 User, Fastfading, Seperat"
    axs.semilogy(Sep_fastfading_2[:, 0], Sep_fastfading_2[:, cols], color = 'r', ls = '-',  marker = 'd', mfc = 'none', ms = 18, label = lb,)

    # #=========================  ===============================
    lb = "2 User, Blockfading, Joint"
    axs.semilogy(Joint_blockfading_2[:, 0], Joint_blockfading_2[:, cols], color = 'b', ls='--', lw = 3, marker = 'o', mfc = 'none', ms = 16,  mew = 2, label = lb)

    lb = "2 User, Blockfading, Seperat"
    axs.semilogy(Sep_blockfading_2[:, 0], Sep_blockfading_2[:, cols], color = 'b', ls='--', lw = 3, marker = 'd', mfc = 'none', ms = 16,  mew = 2, label = lb)
    #=========================   ===============================

    lb = "2 User, Fastfading, Joint, mess"
    # axs.semilogy(Joint_fastfading_2_mess2[:, 0], Joint_fastfading_2_mess2[:, cols], color = 'k', ls='--', lw = 3, marker = 'd', mfc = 'none', ms = 16,  mew = 2, label = lb)
    #=========================   ===============================

    ##===========================================================
    # plt.gca().invert_xaxis()

    axs.grid(linestyle = (0, (5, 10)), linewidth = 0.5 )
    # label
    font = {'family':'Times New Roman','style':'normal','size':35}
    axs.set_xlabel("SNR (dB)", fontproperties=font)
    if cols == 1:
        axs.set_ylabel( "FER",      fontproperties = font )# , fontdict = font1
    elif cols == 2:
        axs.set_ylabel( "BER",      fontproperties = font )# , fontdict = font1
    elif cols == 3:
        axs.set_ylabel( "Aggregation error rate",      fontproperties = font )# , fontdict = font1
    #font1 = FontProperties(fname=fontpath1+"Times_New_Roman.ttf", size = 22)
    # font1 = FontProperties(fname=fontpath2+"Caskaydia Cove ExtraLight Nerd Font Complete.otf", size=16)
    font1 = {'family':'Times New Roman','style':'normal','size':22, }
    legend1 = axs.legend(loc = 'best', borderaxespad = 0, edgecolor = 'black', prop = font1,)
    frame1 = legend1.get_frame()
    frame1.set_alpha(1)
    frame1.set_facecolor('none')  # 设置图例legend背景透明

    bw = 2.5
    axs.spines['bottom'].set_linewidth(bw) ###设置底部坐标轴的粗细
    axs.spines['left'].set_linewidth(bw)   ###设置左边坐标轴的粗细
    axs.spines['right'].set_linewidth(bw)  ###设置右边坐标轴的粗细
    axs.spines['top'].set_linewidth(bw)    ###设置上部坐标轴的粗细

    axs.tick_params(direction = 'in', axis = 'both', top=True, right = True, labelsize = 16, width = bw)
    labels = axs.get_xticklabels() + axs.get_yticklabels()
    [label.set_fontname('Times New Roman') for label in labels]
    [label.set_fontsize(30) for label in labels] #刻度值字号

    # fontt = {'family':'Times New Roman','style':'normal','size':35 }
    # plt.suptitle("2 User, BPSK, [1024, 512], regular LDPC", fontproperties = fontt, )
    out_fig = plt.gcf()

    if cols == 1:
        out_fig.savefig("./Figures/2user_fer.eps")
        out_fig.savefig("./Figures/2user_fer.pdf")
    elif cols == 2:
        out_fig.savefig( "./Figures/2user_ber.eps")
        out_fig.savefig( "./Figures/2user_ber.pdf")
    elif cols == 3:
        out_fig.savefig( "./Figures/2user_aggerr.eps")
        out_fig.savefig( "./Figures/2user_aggerr.pdf")
    plt.show()
    plt.close()
    return


# SISO_4user()
SISO_2user()







































