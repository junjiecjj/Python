function KF_ini = DetermineKF_ini(TargetList_ort, ...
                  Para, ...
                  flag)
% Give a suitable initial value before actually entering kalman filter
%%
if strcmp(flag, 'radar')
    KF_ini = ...
        struct( ...
        'label',[],...
        'mu', [], ...
        'var', []);
    
    NumTarget = length(TargetList_ort);
    AllLabel_cell = {TargetList_ort(:).label};
    AllLabel_array = squeeze(char(( AllLabel_cell )));
    for i = 1:NumTarget
        KF_ini.label{i} = AllLabel_array(i,:);
        if strcmp(TargetList_ort(i).orientationVar, 'large')
            KF_ini.var{i} = 200*eye(4);
        else
            KF_ini.var{i} = 0.02*eye(4);
        end
        if abs(TargetList_ort(i).azi_average - TargetList_ort(i).orientation) < 85
            vx = (TargetList_ort(i).velocity_average - (Para.N_c/2 + 1))...
                / cosd(TargetList_ort(i).azi_average - TargetList_ort(i).orientation) ...
                * sind(TargetList_ort(i).orientation) ...
                /(2*Para.N_c*Para.TcAll*Para.fc/3e8);
            vy = (TargetList_ort(i).velocity_average - (Para.N_c/2 + 1))...
                / cosd(TargetList_ort(i).azi_average - TargetList_ort(i).orientation) ...
                * cosd(TargetList_ort(i).orientation) ...
                /(2*Para.N_c*Para.TcAll*Para.fc/3e8);                
        else
            % the difference between azi and orientation is too big
            vx = rand;
            vy = 10*rand;
        end
    
        KF_ini.mu{i} = [(TargetList_ort(i).range_average-1) * sind(TargetList_ort(i).azi_average)...
                            /(4*Para.fs*Para.TcEff)...
                            *(3e8 * 2*(Para.Tsen+Para.Tcom)) ;... 
                            ... 
                        (TargetList_ort(i).range_average-1) * cosd(TargetList_ort(i).azi_average)...
                            /(4*Para.fs*Para.TcEff)...
                            *(3e8 * 2*(Para.Tsen+Para.Tcom)) ;... 
                            ...
                        vx; ...
                        vy];
    end
else% strcmp(flag, 'comm')
    KF_ini = ...
        struct( ...
        'label',[],...
        'mu', [], ...
        'var', []);
    
    NumTarget = length(TargetList_ort);
    AllLabel_cell = {TargetList_ort(:).label};
    AllLabel_array = squeeze(char(string(AllLabel_cell )));
    for i = 1:NumTarget
        if strcmp(AllLabel_array(i,:), 'A_0')
            KF_ini.label = AllLabel_array(i,:);        
            if strcmp(TargetList_ort(i).orientationVar, 'large')
                KF_ini.var = 200*eye(4);
            else
                KF_ini.var = 0.02*eye(4);
            end
            if abs(TargetList_ort(i).azi_average - TargetList_ort(i).orientation) < 85
                vx = (TargetList_ort(i).velocity_average - (Para.N_c/2 + 1))...
                    / cosd(TargetList_ort(i).azi_average - TargetList_ort(i).orientation) ...
                    * sind(TargetList_ort(i).orientation) ...
                    /(Para.N_c*Para.TcAll*Para.fc/3e8);
                vy = (TargetList_ort(i).velocity_average - (Para.N_c/2 + 1))...
                    / cosd(TargetList_ort(i).azi_average - TargetList_ort(i).orientation) ...
                    * cosd(TargetList_ort(i).orientation) ...
                    /(Para.N_c*Para.TcAll*Para.fc/3e8);                
            else
                % the difference between azi and orientation is too big
                vx = rand;
                vy = -5*rand;
            end
        
            KF_ini.mu = [(TargetList_ort(i).range_average-1) * sind(TargetList_ort(i).azi_average)...
                                /(2*Para.fs*Para.TcEff)...
                                *(3e8 * 2*(Para.Tsen+Para.Tcom)) ;... 
                                ... 
                            (TargetList_ort(i).range_average-1) * cosd(TargetList_ort(i).azi_average)...
                                /(2*Para.fs*Para.TcEff)...
                                *(3e8 * 2*(Para.Tsen+Para.Tcom)) ;... 
                                ...
                            vx; ...
                            vy];
            break;% only track RT in the current version
        end
    end
end


end