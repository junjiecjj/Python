#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Jul 30 17:39:32 2024

@author: jack
https://numpy.org/doc/stable/reference/random/generated/numpy.random.beta.html

https://docs.scipy.org/doc/scipy/reference/stats.html
"""



import numpy as np
import pandas as pd
import scipy as sy
import matplotlib.pyplot as plt

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% erf, erfc, Qfun %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

def Qfun(x):
    return 0.5 * np.special.erfc(x / np.sqrt(2))

def QfunUPbound1(x):
    return



def QfunUPbound2(x):
    return






#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Gamma %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

#%%>>>>>>>>>>>>>>>>>>>>>>>>  gamma function.
import numpy as np
from scipy.special import gamma, factorial

gamma([0, 0.5, 1, 5])
z = 2.5 + 1j
gamma(z)

gamma(z+1), z*gamma(z)  # Recurrence property

gamma(0.5)**2  # gamma(0.5) = sqrt(pi)
x = np.linspace(-3.5, 5.5, 2251)
y = gamma(x)

fig, ax = plt.subplots(figsize = (10, 10))
ax.plot(x, y, 'b', lw = 2, alpha=0.6, label='gamma(x)')
k = np.arange(1, 7)
ax.plot(k, factorial(k-1), 'k*', ms = 10, alpha=0.6, label='(x-1)!, x = 1, 2, ...')
ax.set_xlim(-3.5, 5.5)
ax.set_ylim(-10, 25)
plt.grid()
plt.xlabel('x')
plt.legend(loc='lower right')
plt.show()


#%%>>>>>>>>>>>>>>>>>>>>>>>>  gamma continuous random variable distribution %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%








































































































































































































































































































































































